name: Python Build & Publish (Trusted)

on:
  push:
    tags: ["v*"]     # 例: v0.1.0 を push で発火
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            cibw_archs: "auto"
            deployment_target: ""
            openblas_path: ""
            py_tag: "cp310"
          - os: ubuntu-latest
            cibw_archs: "auto"
            deployment_target: ""
            openblas_path: ""
            py_tag: "cp311"
          - os: ubuntu-latest
            cibw_archs: "auto"
            deployment_target: ""
            openblas_path: ""
            py_tag: "cp312"
          - os: ubuntu-latest
            cibw_archs: "auto"
            deployment_target: ""
            openblas_path: ""
            py_tag: "cp313"
          # macOS Intel builds
          - os: macos-13  # Intel Mac
            cibw_archs: "x86_64"
            deployment_target: "13.0"
            openblas_path: "/usr/local/opt/openblas"
            py_tag: "cp310"
          - os: macos-13  # Intel Mac
            cibw_archs: "x86_64"
            deployment_target: "13.0"
            openblas_path: "/usr/local/opt/openblas"
            py_tag: "cp311"
          - os: macos-13  # Intel Mac
            cibw_archs: "x86_64"
            deployment_target: "13.0"
            openblas_path: "/usr/local/opt/openblas"
            py_tag: "cp312"
          - os: macos-13  # Intel Mac
            cibw_archs: "x86_64"
            deployment_target: "13.0"
            openblas_path: "/usr/local/opt/openblas"
            py_tag: "cp313"
          # macOS Apple Silicon builds
          - os: macos-latest  # Apple Silicon Mac
            cibw_archs: "arm64"
            deployment_target: "15.0"
            openblas_path: "/opt/homebrew/opt/openblas"
            py_tag: "cp310"
          - os: macos-latest  # Apple Silicon Mac
            cibw_archs: "arm64"
            deployment_target: "15.0"
            openblas_path: "/opt/homebrew/opt/openblas"
            py_tag: "cp311"
          - os: macos-latest  # Apple Silicon Mac
            cibw_archs: "arm64"
            deployment_target: "15.0"
            openblas_path: "/opt/homebrew/opt/openblas"
            py_tag: "cp312"
          - os: macos-latest  # Apple Silicon Mac
            cibw_archs: "arm64"
            deployment_target: "15.0"
            openblas_path: "/opt/homebrew/opt/openblas"
            py_tag: "cp313"
    steps:
      - uses: actions/checkout@v4
      - name: remove python/.gitignore
        shell: bash
        run: |
          rm -f python/.gitignore
      - uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_DEPENDENCY_VERSIONS: "latest"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_BUILD: "${{ matrix.py_tag }}-*"
          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=${{ matrix.deployment_target || '11.0' }} CMAKE_PREFIX_PATH=${{ matrix.openblas_path }}:/opt/homebrew/opt/openblas:/usr/local/opt/openblas PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig:/usr/local/lib/pkgconfig SPARSEIR_USE_BLAS=1"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_SKIP: "*-manylinux_i686 *-musllinux_i686"
          # Install OpenBLAS and development tools before building
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel || (yum install -y epel-release && yum install -y openblas-devel) || dnf install -y openblas-devel || (apt-get update && apt-get install -y libopenblas-dev)"
          CIBW_BEFORE_ALL_MACOS: "brew install openblas"
          # Set environment variables to help CMake find OpenBLAS
          CIBW_ENVIRONMENT_LINUX: "CMAKE_PREFIX_PATH=/usr/lib64/openblas:/usr/lib/openblas:/usr/local/lib64/openblas:/usr/local/lib/openblas PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/local/lib64/pkgconfig SPARSEIR_USE_BLAS=1"
        with:
          package-dir: ./python
          output-dir: dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}-${{ matrix.py_tag }}
          path: dist/*

  publish-testpypi:
    needs: build-wheels
    runs-on: ubuntu-latest
    environment:
      name: testpypi
    permissions:
      id-token: write     # ← Trusted Publishing に必須
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to TestPyPI (Trusted)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true
          attestations: false  # Disable attestations due to Sigstore service issues