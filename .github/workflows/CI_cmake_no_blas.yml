# Multi-platform CMake CI workflow for libsparseir (without BLAS)
# Tests across Windows, macOS, and Ubuntu with gcc and clang compilers
name: CMake Multi-Platform CI (No BLAS)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  INSTALL_PREFIX: ${{github.workspace}}/install

jobs:
  build-no-blas:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu with gcc and clang (x86_64)
          - os: ubuntu-latest
            compiler: gcc
            c_compiler: gcc
            cpp_compiler: g++
            eigen_install: sudo apt update && sudo apt install -y libeigen3-dev
          - os: ubuntu-latest
            compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
            eigen_install: sudo apt update && sudo apt install -y libeigen3-dev

          # Ubuntu ARM64 with gcc and clang
          - os: ubuntu-latest
            arch: arm64
            compiler: gcc
            c_compiler: gcc
            cpp_compiler: g++
            eigen_install: sudo apt update && sudo apt install -y libeigen3-dev
          - os: ubuntu-latest
            arch: arm64
            compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
            eigen_install: sudo apt update && sudo apt install -y libeigen3-dev

          # macOS with clang
          - os: macos-latest
            compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
            eigen_install: brew install eigen

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.arch && format('-{0}', matrix.arch) || '' }}-no-blas

    steps:
    - uses: actions/checkout@v5

    - name: Install Fortran compiler (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install gfortran

    - name: Install Eigen
      run: ${{ matrix.eigen_install }}

    - name: Debug Fortran compilers (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo "Available Fortran compilers:"
        ls -la /opt/homebrew/bin/*fortran* || echo "No *fortran* found in /opt/homebrew/bin/"
        ls -la /usr/local/bin/*fortran* || echo "No *fortran* found in /usr/local/bin/"
        which gfortran || echo "gfortran not in PATH"
        which gfortran-13 || echo "gfortran-13 not in PATH"

    - name: Configure CMake (Unix)
      run: |
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          # Use the full path to gfortran from Homebrew gcc
          FORTRAN_COMPILER="/opt/homebrew/bin/gfortran-13"
        else
          FORTRAN_COMPILER="gfortran"
        fi

        cmake -B ${{github.workspace}}/build \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_Fortran_COMPILER="$FORTRAN_COMPILER" \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DSPARSEIR_BUILD_FORTRAN=ON \
          -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_PREFIX}} \
          -DSPARSEIR_BUILD_TESTING=ON \
          -DSPARSEIR_USE_BLAS=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --build-config ${{env.BUILD_TYPE}} --output-on-failure

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Verify Installation
      run: |
        ls -la ${{env.INSTALL_PREFIX}}/include/sparseir/
        ls -la ${{env.INSTALL_PREFIX}}/lib/

    - name: Build and Run Fortran Sample (Unix)
      run: |
        echo "=== Building Fortran Sample ==="
        cd fortran/sample
        
        # Find SparseIR CMake config
        SPARSEIR_DIR="${{env.INSTALL_PREFIX}}/share/cmake/SparseIR"
        if [ ! -d "$SPARSEIR_DIR" ]; then
          echo "ERROR: SparseIR CMake config not found at $SPARSEIR_DIR"
          exit 1
        fi
        
        # Install FFTW3 if needed (for Ubuntu/macOS)
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update && sudo apt-get install -y libfftw3-dev
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          brew install fftw
        fi
        
        # Clean and build
        rm -rf build
        
        # Set Fortran compiler explicitly
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          FORTRAN_COMPILER="/opt/homebrew/bin/gfortran-13"
        else
          FORTRAN_COMPILER="gfortran"
        fi
        
        cmake -B build \
          -DSparseIR_DIR="$SPARSEIR_DIR" \
          -DUSE_SYSTEM_LIBSPARSEIR=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_Fortran_COMPILER="$FORTRAN_COMPILER"
        
        cmake --build build
        
        echo "=== Running Fortran Sample ==="
        
        # Add libsparseir shared library to LD_LIBRARY_PATH for Linux
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          export LD_LIBRARY_PATH="${{env.INSTALL_PREFIX}}/lib:$LD_LIBRARY_PATH"
          echo "Updated LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
        fi
        
        ./build/second_order_perturbation_fort
        
        echo "=== Fortran Sample completed successfully ==="
