name: CI Python Build & Publish to TestPyPI (Trusted)

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            cibw_archs: "auto"
            deployment_target: ""
            openblas_path: ""
            py_tag: "cp310"
          # macOS Intel builds
          - os: macos-13  # Intel Mac
            cibw_archs: "x86_64"
            deployment_target: "13.0"
            openblas_path: "/usr/local/opt/openblas"
            py_tag: "cp310"
          # macOS Apple Silicon builds
          - os: macos-latest  # Apple Silicon Mac
            cibw_archs: "arm64"
            deployment_target: "15.0"
            openblas_path: "/opt/homebrew/opt/openblas"
            py_tag: "cp310"
    steps:
      - uses: actions/checkout@v5
      - name: remove python/.gitignore
        shell: bash
        run: |
          rm -f python/.gitignore
      - uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_DEPENDENCY_VERSIONS: "latest"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_BUILD: "${{ matrix.py_tag }}-*"
          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=${{ matrix.deployment_target || '11.0' }} SPARSEIR_USE_BLAS=1"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_SKIP: "*-manylinux_i686 *-musllinux_i686"
          # Install OpenBLAS using micromamba (conda-forge) - separate for manylinux and musllinux
          CIBW_BEFORE_ALL_MANYLINUX: "curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba && ./bin/micromamba create -y -p /opt/openblas && ./bin/micromamba install -y -c conda-forge openblas -p /opt/openblas --no-deps"
          CIBW_BEFORE_ALL_MUSLLINUX: "apk add --no-cache bzip2 && curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba && ./bin/micromamba create -y -p /opt/openblas && ./bin/micromamba install -y -c conda-forge openblas -p /opt/openblas --no-deps"
          CIBW_BEFORE_ALL_MACOS: "brew install openblas"
          # Set environment variables to help CMake find OpenBLAS
          CIBW_ENVIRONMENT_MANYLINUX: "SPARSEIR_USE_BLAS=1"
          CIBW_ENVIRONMENT_MUSLLINUX: "SPARSEIR_USE_BLAS=1"
        with:
          package-dir: ./python
          output-dir: dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}-${{ matrix.py_tag }}
          path: dist/*

  publish-testpypi:
    needs: build-wheels
    runs-on: ubuntu-latest
    environment:
      name: testpypi
    permissions:
      id-token: write     # ← Trusted Publishing に必須
      contents: read
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true
      - name: Publish to TestPyPI (Trusted)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true
          attestations: false  # Disable attestations due to Sigstore service issues