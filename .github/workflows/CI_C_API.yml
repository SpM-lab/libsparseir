# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build C_API and run tests with Julia

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CCACHE_BASEDIR: ${GITHUB_WORKSPACE}
  CCACHE_DIR: ${GITHUB_WORKSPACE}/.ccache
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 5

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install ccache
      run: sudo apt install ccache
    - name: Install Eigen
      run: sudo apt install libeigen3-dev

    - name: libsparseir cache restore
      id: build-c-api
      uses: actions/cache/restore@v4
      with:
        path: .ccache
        key: ${{ runner.os }}-pipelines-${{ hashFiles('src/cinterface.cpp') }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build \
              -DSPARSEIR_BUILD_TESTING=OFF \
              -DSPARSEIR_BUILD_FORTRAN=OFF \
              -DCMAKE_INSTALL_PREFIX="$HOME/opt/libsparseir" \
              -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DCCACHE_DIR=${{env.CCACHE_DIR}} \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_C_COMPILER_LAUNCHER=ccache \

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Install
      # Install your program with the given configuration
      run: cmake --install ${{github.workspace}}/build

    - name: libsparseir cache save
      id: cache-pipelines
      uses: actions/cache/save@v4
      env:
        cache-name: cache-pipelines
      with:
        key: ${{ steps.build-c-api.outputs.cache-primary-key }}
        path: ${{env.CCACHE_DIR }}

    - uses: julia-actions/setup-julia@v2
    - uses: julia-actions/cache@v2
    - uses: julia-actions/julia-buildpkg@v1
      with:
        project: ${{github.workspace}}/julia
    - uses: julia-actions/julia-runtest@v1
      with:
        project: ${{github.workspace}}/julia
